#!/bin/bash
# Starts docker-compose service
# Takes one argument.
# It starts in docker the service received as argument
# e.g. 'drun consul' will start 2 containers with consul and traefik. All services depend on traefik

SCRIPT_PATH="$(
    cd "$(dirname "$0")"
    pwd -P
)"
RESOURCES_PATH="$SCRIPT_PATH/../resources"
CONTAINERS_HOME="$SCRIPT_PATH/../.containers_home"

# Transform the arguments in the propper format for our docker-compose command
args=("$@")
SERVICE_NAME=()
AS_HOST=false
for arg in "${args[@]}"; do
    case $arg in
        -h|--host)
            AS_HOST=true
            shift # past flag
        ;;
        *)
            # unknown option probably it's the service name
            SERVICE_NAME=("${SERVICES[@]}" "$arg")
        ;;
    esac
done

# Transform the array into a string
printf -v SERVICE_NAME_STR "%s\n" "${SERVICE_NAME[@]}"
SERVICE_NAME_STR=${SERVICE_NAME_STR%?}

if [[ ! $1 ]]; then
    printf "\e[31m[ERROR]\e[39m You need to specify a service you want to start.\n"
    exit 1
fi

if [ "$AS_HOST" = true ]; then
    echo -e "\e[32m[STARTING]\e[39m "$SERVICE_NAME_STR" on HOST network ..."
else
    echo -e "\e[32m[STARTING]\e[39m "$SERVICE_NAME_STR" on TRAEFIK network ..."
fi
sleep 1

if [ "$AS_HOST" = true ]; then
    # Remove the container from docker because if we run it under the same name with network host mode or intraefik there will be conflicts
    # then specify where the containers should store their data
    docker rm "dev-$SERVICE_NAME_STR" && \ 
        export DEV_CONTAINERS_HOME=$CONTAINERS_HOME && \
        docker-compose -f $RESOURCES_PATH/$SERVICE_NAME_STR/docker-compose.yml \
                       -f $RESOURCES_PATH/$SERVICE_NAME_STR/docker-compose.host.yml \
                       up --build "dev-$SERVICE_NAME_STR"
else
    # Remove the container from docker because if we run it under the same name with network host mode or intraefik there will be conflicts
    # then specify where the containers should store their data
    docker rm "dev-$SERVICE_NAME_STR" && \ 
        export DEV_CONTAINERS_HOME=$CONTAINERS_HOME && \
        docker-compose -f $RESOURCES_PATH/traefik/docker-compose.yml \
                       -f $RESOURCES_PATH/$SERVICE_NAME_STR/docker-compose.yml \
                       -f $RESOURCES_PATH/$SERVICE_NAME_STR/docker-compose.traefik.yml \
                       up --build "dev-$SERVICE_NAME_STR"
fi

echo -e "\e[34m[STOPPED]\e[39m "$SERVICE_NAME_STR"!\n"
